From 6d307fda2b9ba71fe18f1449f7444bed7ff05193 Mon Sep 17 00:00:00 2001
From: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date: Sat, 21 Jan 2023 14:58:05 -0800
Subject: [PATCH 357/547] Backported from master:

	PR fortran/106731

gcc/fortran/ChangeLog:

	* trans-array.cc (gfc_trans_auto_array_allocation): Remove gcc_assert (!TREE_STATIC()).

gcc/testsuite/ChangeLog:

	* gfortran.dg/pr106731.f90: New test.
---
 gcc/fortran/trans-array.cc             |  1 -
 gcc/testsuite/gfortran.dg/pr106731.f90 | 58 ++++++++++++++++++++++++++
 2 files changed, 58 insertions(+), 1 deletion(-)
 create mode 100644 gcc/testsuite/gfortran.dg/pr106731.f90

diff --git a/gcc/fortran/trans-array.cc b/gcc/fortran/trans-array.cc
index 514cb057afb..f7097ee4165 100644
--- a/gcc/fortran/trans-array.cc
+++ b/gcc/fortran/trans-array.cc
@@ -6614,7 +6614,6 @@ gfc_trans_auto_array_allocation (tree decl, gfc_symbol * sym,
   type = TREE_TYPE (type);
 
   gcc_assert (!sym->attr.use_assoc);
-  gcc_assert (!TREE_STATIC (decl));
   gcc_assert (!sym->module);
 
   if (sym->ts.type == BT_CHARACTER
diff --git a/gcc/testsuite/gfortran.dg/pr106731.f90 b/gcc/testsuite/gfortran.dg/pr106731.f90
new file mode 100644
index 00000000000..470830c7069
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/pr106731.f90
@@ -0,0 +1,58 @@
+! { dg-do run }
+! PR106731 ICE on automatic array of derived type
+module causes_ice
+    implicit none
+
+    type :: t
+        real(8) :: x
+        contains
+        procedure, private :: write_formatted
+        generic :: write(formatted) => write_formatted
+    end type t
+
+    contains
+
+    subroutine write_formatted(this, unit, iotype, v_list, iostat, iomsg)
+       class(t), intent(in) :: this
+       integer, intent(in) :: unit
+       character(*), intent(in) :: iotype
+       integer, intent(in) :: v_list(:)
+       integer, intent(out) :: iostat
+       character(*), intent(inout) :: iomsg
+       write(unit, '(a,3x,f10.5)', iostat=iostat, iomsg=iomsg) 'dummy', this%x
+    end subroutine write_formatted
+
+end module causes_ice
+
+module use_t
+    use causes_ice
+    implicit none
+
+    public :: automatic_alloc
+
+    contains
+
+    subroutine automatic_alloc(n)
+        integer, intent(in) :: n
+
+        ! Automatic array: ICE!
+        type(t) :: automatic(n)
+
+        ! Allocatable: works
+        type(t), allocatable :: alloc(:)
+        allocate(alloc(n))
+        
+        automatic%x = 42.34675_8
+
+        ! Do anything
+        print *, 'n=',n,automatic%x
+        print *, 'n=',n,automatic
+
+    end subroutine automatic_alloc
+
+end module use_t
+
+program test
+    use use_t
+    call automatic_alloc(1)
+end program test
-- 
2.25.1


# Makefile.in generated by automake 1.16.5 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



VPATH = .
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ivykis
pkgincludedir = $(includedir)/ivykis
pkglibdir = $(libdir)/ivykis
pkglibexecdir = $(libexecdir)/ivykis
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = riscv64-poky-linux-gnu
TESTS = avl$(EXEEXT) event_unregister_bug$(EXEEXT) \
	iv_event_raw_test$(EXEEXT) struct_sizes$(EXEEXT) \
	timer$(EXEEXT) timer_fairness$(EXEEXT) \
	timer_fairness_bug$(EXEEXT) timer_order$(EXEEXT) \
	timer_past$(EXEEXT) timer_zero$(EXEEXT) $(am__EXEEXT_4)
am__append_1 = client			\
			   connectfail			\
			   connectreset			\
			   iv_event_raw_bench_signal	\
			   iv_fd_pump_discard		\
			   iv_fd_pump_echo		\
			   iv_popen_test		\
			   iv_signal_bench_signal	\
			   iv_signal_bench_timer	\
			   iv_signal_child_test		\
			   null

am__append_2 = iv_inotify_test
am__append_3 = iv_signal_test
noinst_PROGRAMS = $(am__EXEEXT_3) $(am__EXEEXT_5)
subdir = test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = client$(EXEEXT) connectfail$(EXEEXT) \
	connectreset$(EXEEXT) \
	iv_event_raw_bench_signal$(EXEEXT) \
	iv_fd_pump_discard$(EXEEXT) \
	iv_fd_pump_echo$(EXEEXT) \
	iv_popen_test$(EXEEXT) \
	iv_signal_bench_signal$(EXEEXT) \
	iv_signal_bench_timer$(EXEEXT) \
	iv_signal_child_test$(EXEEXT) null$(EXEEXT)
am__EXEEXT_2 =  \
	iv_inotify_test$(EXEEXT)
am__EXEEXT_3 = iv_event_raw_bench_timer$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2)
am__EXEEXT_4 = iv_signal_test$(EXEEXT)
am__EXEEXT_5 = avl$(EXEEXT) event_unregister_bug$(EXEEXT) \
	iv_event_raw_test$(EXEEXT) struct_sizes$(EXEEXT) \
	timer$(EXEEXT) timer_fairness$(EXEEXT) \
	timer_fairness_bug$(EXEEXT) timer_order$(EXEEXT) \
	timer_past$(EXEEXT) timer_zero$(EXEEXT) $(am__EXEEXT_4)
PROGRAMS = $(noinst_PROGRAMS)
am_avl_OBJECTS = avl.$(OBJEXT)
avl_OBJECTS = $(am_avl_OBJECTS)
avl_LDADD = $(LDADD)
avl_DEPENDENCIES = $(top_builddir)/src/libivykis.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_client_OBJECTS = client.$(OBJEXT)
client_OBJECTS = $(am_client_OBJECTS)
client_LDADD = $(LDADD)
client_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_connectfail_OBJECTS = connectfail.$(OBJEXT)
connectfail_OBJECTS = $(am_connectfail_OBJECTS)
connectfail_LDADD = $(LDADD)
connectfail_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_connectreset_OBJECTS = connectreset.$(OBJEXT)
connectreset_OBJECTS = $(am_connectreset_OBJECTS)
connectreset_LDADD = $(LDADD)
connectreset_DEPENDENCIES = $(top_builddir)/src/libivykis.la
event_unregister_bug_SOURCES = event_unregister_bug.c
event_unregister_bug_OBJECTS = event_unregister_bug.$(OBJEXT)
event_unregister_bug_LDADD = $(LDADD)
event_unregister_bug_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_iv_event_raw_bench_signal_OBJECTS =  \
	iv_event_raw_bench_signal-iv_event_raw_bench.$(OBJEXT)
iv_event_raw_bench_signal_OBJECTS =  \
	$(am_iv_event_raw_bench_signal_OBJECTS)
iv_event_raw_bench_signal_LDADD = $(LDADD)
iv_event_raw_bench_signal_DEPENDENCIES =  \
	$(top_builddir)/src/libivykis.la
am_iv_event_raw_bench_timer_OBJECTS = iv_event_raw_bench.$(OBJEXT)
iv_event_raw_bench_timer_OBJECTS =  \
	$(am_iv_event_raw_bench_timer_OBJECTS)
iv_event_raw_bench_timer_LDADD = $(LDADD)
iv_event_raw_bench_timer_DEPENDENCIES =  \
	$(top_builddir)/src/libivykis.la
am_iv_event_raw_test_OBJECTS = iv_event_raw_test.$(OBJEXT)
iv_event_raw_test_OBJECTS = $(am_iv_event_raw_test_OBJECTS)
iv_event_raw_test_LDADD = $(LDADD)
iv_event_raw_test_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_iv_fd_pump_discard_OBJECTS = iv_fd_pump_discard.$(OBJEXT)
iv_fd_pump_discard_OBJECTS = $(am_iv_fd_pump_discard_OBJECTS)
iv_fd_pump_discard_LDADD = $(LDADD)
iv_fd_pump_discard_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_iv_fd_pump_echo_OBJECTS = iv_fd_pump_echo.$(OBJEXT)
iv_fd_pump_echo_OBJECTS = $(am_iv_fd_pump_echo_OBJECTS)
iv_fd_pump_echo_LDADD = $(LDADD)
iv_fd_pump_echo_DEPENDENCIES = $(top_builddir)/src/libivykis.la
iv_inotify_test_SOURCES = iv_inotify_test.c
iv_inotify_test_OBJECTS = iv_inotify_test.$(OBJEXT)
iv_inotify_test_LDADD = $(LDADD)
iv_inotify_test_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_iv_popen_test_OBJECTS = iv_popen_test.$(OBJEXT)
iv_popen_test_OBJECTS = $(am_iv_popen_test_OBJECTS)
iv_popen_test_LDADD = $(LDADD)
iv_popen_test_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_iv_signal_bench_signal_OBJECTS =  \
	iv_signal_bench_signal-iv_signal_bench.$(OBJEXT)
iv_signal_bench_signal_OBJECTS = $(am_iv_signal_bench_signal_OBJECTS)
iv_signal_bench_signal_LDADD = $(LDADD)
iv_signal_bench_signal_DEPENDENCIES =  \
	$(top_builddir)/src/libivykis.la
am_iv_signal_bench_timer_OBJECTS = iv_signal_bench.$(OBJEXT)
iv_signal_bench_timer_OBJECTS = $(am_iv_signal_bench_timer_OBJECTS)
iv_signal_bench_timer_LDADD = $(LDADD)
iv_signal_bench_timer_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_iv_signal_child_test_OBJECTS = iv_signal_child_test.$(OBJEXT)
iv_signal_child_test_OBJECTS = $(am_iv_signal_child_test_OBJECTS)
iv_signal_child_test_LDADD = $(LDADD)
iv_signal_child_test_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_iv_signal_test_OBJECTS = iv_signal_test.$(OBJEXT)
iv_signal_test_OBJECTS = $(am_iv_signal_test_OBJECTS)
iv_signal_test_LDADD = $(LDADD)
iv_signal_test_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_null_OBJECTS = null.$(OBJEXT)
null_OBJECTS = $(am_null_OBJECTS)
null_LDADD = $(LDADD)
null_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_struct_sizes_OBJECTS = struct_sizes.$(OBJEXT)
struct_sizes_OBJECTS = $(am_struct_sizes_OBJECTS)
struct_sizes_LDADD = $(LDADD)
struct_sizes_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_timer_OBJECTS = timer.$(OBJEXT)
timer_OBJECTS = $(am_timer_OBJECTS)
timer_LDADD = $(LDADD)
timer_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_timer_fairness_OBJECTS = timer_fairness.$(OBJEXT)
timer_fairness_OBJECTS = $(am_timer_fairness_OBJECTS)
timer_fairness_LDADD = $(LDADD)
timer_fairness_DEPENDENCIES = $(top_builddir)/src/libivykis.la
timer_fairness_bug_SOURCES = timer_fairness_bug.c
timer_fairness_bug_OBJECTS = timer_fairness_bug.$(OBJEXT)
timer_fairness_bug_LDADD = $(LDADD)
timer_fairness_bug_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_timer_order_OBJECTS = timer_order.$(OBJEXT)
timer_order_OBJECTS = $(am_timer_order_OBJECTS)
timer_order_LDADD = $(LDADD)
timer_order_DEPENDENCIES = $(top_builddir)/src/libivykis.la
am_timer_past_OBJECTS = timer_past.$(OBJEXT)
timer_past_OBJECTS = $(am_timer_past_OBJECTS)
timer_past_LDADD = $(LDADD)
timer_past_DEPENDENCIES = $(top_builddir)/src/libivykis.la
timer_zero_SOURCES = timer_zero.c
timer_zero_OBJECTS = timer_zero.$(OBJEXT)
timer_zero_LDADD = $(LDADD)
timer_zero_DEPENDENCIES = $(top_builddir)/src/libivykis.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/avl.Po ./$(DEPDIR)/client.Po \
	./$(DEPDIR)/connectfail.Po ./$(DEPDIR)/connectreset.Po \
	./$(DEPDIR)/event_unregister_bug.Po \
	./$(DEPDIR)/iv_event_raw_bench.Po \
	./$(DEPDIR)/iv_event_raw_bench_signal-iv_event_raw_bench.Po \
	./$(DEPDIR)/iv_event_raw_test.Po \
	./$(DEPDIR)/iv_fd_pump_discard.Po \
	./$(DEPDIR)/iv_fd_pump_echo.Po ./$(DEPDIR)/iv_inotify_test.Po \
	./$(DEPDIR)/iv_popen_test.Po ./$(DEPDIR)/iv_signal_bench.Po \
	./$(DEPDIR)/iv_signal_bench_signal-iv_signal_bench.Po \
	./$(DEPDIR)/iv_signal_child_test.Po \
	./$(DEPDIR)/iv_signal_test.Po ./$(DEPDIR)/null.Po \
	./$(DEPDIR)/struct_sizes.Po ./$(DEPDIR)/timer.Po \
	./$(DEPDIR)/timer_fairness.Po \
	./$(DEPDIR)/timer_fairness_bug.Po ./$(DEPDIR)/timer_order.Po \
	./$(DEPDIR)/timer_past.Po ./$(DEPDIR)/timer_zero.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(avl_SOURCES) $(client_SOURCES) $(connectfail_SOURCES) \
	$(connectreset_SOURCES) event_unregister_bug.c \
	$(iv_event_raw_bench_signal_SOURCES) \
	$(iv_event_raw_bench_timer_SOURCES) \
	$(iv_event_raw_test_SOURCES) $(iv_fd_pump_discard_SOURCES) \
	$(iv_fd_pump_echo_SOURCES) iv_inotify_test.c \
	$(iv_popen_test_SOURCES) $(iv_signal_bench_signal_SOURCES) \
	$(iv_signal_bench_timer_SOURCES) \
	$(iv_signal_child_test_SOURCES) $(iv_signal_test_SOURCES) \
	$(null_SOURCES) $(struct_sizes_SOURCES) $(timer_SOURCES) \
	$(timer_fairness_SOURCES) timer_fairness_bug.c \
	$(timer_order_SOURCES) $(timer_past_SOURCES) timer_zero.c
DIST_SOURCES = $(avl_SOURCES) $(client_SOURCES) $(connectfail_SOURCES) \
	$(connectreset_SOURCES) event_unregister_bug.c \
	$(iv_event_raw_bench_signal_SOURCES) \
	$(iv_event_raw_bench_timer_SOURCES) \
	$(iv_event_raw_test_SOURCES) $(iv_fd_pump_discard_SOURCES) \
	$(iv_fd_pump_echo_SOURCES) iv_inotify_test.c \
	$(iv_popen_test_SOURCES) $(iv_signal_bench_signal_SOURCES) \
	$(iv_signal_bench_timer_SOURCES) \
	$(iv_signal_child_test_SOURCES) $(iv_signal_test_SOURCES) \
	$(null_SOURCES) $(struct_sizes_SOURCES) $(timer_SOURCES) \
	$(timer_fairness_SOURCES) timer_fairness_bug.c \
	$(timer_order_SOURCES) $(timer_past_SOURCES) timer_zero.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_builddir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_builddir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} 'git/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = riscv64-poky-linux-gcc-ar
AS = riscv64-poky-linux-as 
AUTOCONF = ${SHELL} 'git/missing' autoconf
AUTOHEADER = ${SHELL} 'git/missing' autoheader
AUTOMAKE = ${SHELL} 'git/missing' automake-1.16
AWK = gawk
CC = gcc    -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security
CCDEPMODE = depmode=none
CFLAGS =  -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=.=/usr/src/debug/ivykis/0.42.4-r0                      -fdebug-prefix-map=.=/usr/src/debug/ivykis/0.42.4-r0                      -fdebug-prefix-map=recipe-sysroot=                      -fdebug-prefix-map=recipe-sysroot-native=  -Wall
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ETAGS = etags
EXEEXT = 
FGREP = grep -F
FILECMD = file
GREP = grep
INSTALL = install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = riscv64-poky-linux-ld --sysroot=recipe-sysroot 
LDFLAGS = -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -fmacro-prefix-map=.=/usr/src/debug/ivykis/0.42.4-r0                      -fdebug-prefix-map=.=/usr/src/debug/ivykis/0.42.4-r0                      -fdebug-prefix-map=recipe-sysroot=                      -fdebug-prefix-map=recipe-sysroot-native=  -Wl,-z,relro,-z,now
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} 'git/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = mkdir -p
NM = riscv64-poky-linux-gcc-nm
NMEDIT = 
OBJDUMP = riscv64-poky-linux-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ivykis
PACKAGE_BUGREPORT = libivykis-discuss@lists.sourceforge.net
PACKAGE_NAME = ivykis
PACKAGE_STRING = ivykis 0.42.4
PACKAGE_TARNAME = ivykis
PACKAGE_URL = 
PACKAGE_VERSION = 0.42.4
PATH_SEPARATOR = :
RANLIB = riscv64-poky-linux-gcc-ranlib
SED = sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = riscv64-poky-linux-strip
VERSION = 0.42.4
abs_builddir = build/test
abs_srcdir = build/../git/test
abs_top_builddir = build
abs_top_srcdir = build/../git
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
ac_cv_timespec_hdr = sys/time.h
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = /usr/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = riscv64-poky-linux-gnu
host_alias = riscv64-poky-linux
host_cpu = riscv64
host_os = linux-gnu
host_vendor = poky
htmldir = ${docdir}
includedir = /usr/include
infodir = /usr/share/info
install_sh = ${SHELL} git/install-sh
libdir = /usr/lib
libexecdir = /usr/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = /usr/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = /usr/sbin
sharedstatedir = /com
srcdir = .
subdirs =  test.mt
sysconfdir = /etc
target_alias = riscv64-poky-linux
top_build_prefix = ../
top_builddir = ..
top_srcdir = .
AM_CPPFLAGS = -D_GNU_SOURCE			\
			  -I$(top_srcdir)/src/include	\
			  -I$(top_builddir)/src/include

LDADD = $(top_builddir)/src/libivykis.la
PROGS = iv_event_raw_bench_timer $(am__append_1) $(am__append_2)
avl_SOURCES = avl.c
client_SOURCES = client.c
connectfail_SOURCES = connectfail.c
connectreset_SOURCES = connectreset.c
iv_event_raw_test_SOURCES = iv_event_raw_test.c
iv_fd_pump_discard_SOURCES = iv_fd_pump_discard.c
iv_fd_pump_echo_SOURCES = iv_fd_pump_echo.c
iv_popen_test_SOURCES = iv_popen_test.c
iv_signal_child_test_SOURCES = iv_signal_child_test.c
iv_signal_test_SOURCES = iv_signal_test.c
null_SOURCES = null.c
struct_sizes_SOURCES = struct_sizes.c
timer_SOURCES = timer.c
timer_fairness_SOURCES = timer_fairness.c
timer_order_SOURCES = timer_order.c
timer_past_SOURCES = timer_past.c
iv_event_raw_bench_signal_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_SIGNAL
iv_event_raw_bench_signal_SOURCES = iv_event_raw_bench.c
iv_event_raw_bench_timer_SOURCES = iv_event_raw_bench.c
iv_signal_bench_signal_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_SIGNAL
iv_signal_bench_signal_SOURCES = iv_signal_bench.c
iv_signal_bench_timer_SOURCES = iv_signal_bench.c
all: all-am

.SUFFIXES:
.SUFFIXES: .lo .log .o .obj .test .test$(EXEEXT) .trs
$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
avl.log: avl$(EXEEXT)
	@p='avl$(EXEEXT)'; \
	b='avl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
event_unregister_bug.log: event_unregister_bug$(EXEEXT)
	@p='event_unregister_bug$(EXEEXT)'; \
	b='event_unregister_bug'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
iv_event_raw_test.log: iv_event_raw_test$(EXEEXT)
	@p='iv_event_raw_test$(EXEEXT)'; \
	b='iv_event_raw_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
struct_sizes.log: struct_sizes$(EXEEXT)
	@p='struct_sizes$(EXEEXT)'; \
	b='struct_sizes'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timer.log: timer$(EXEEXT)
	@p='timer$(EXEEXT)'; \
	b='timer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timer_fairness.log: timer_fairness$(EXEEXT)
	@p='timer_fairness$(EXEEXT)'; \
	b='timer_fairness'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timer_fairness_bug.log: timer_fairness_bug$(EXEEXT)
	@p='timer_fairness_bug$(EXEEXT)'; \
	b='timer_fairness_bug'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timer_order.log: timer_order$(EXEEXT)
	@p='timer_order$(EXEEXT)'; \
	b='timer_order'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timer_past.log: timer_past$(EXEEXT)
	@p='timer_past$(EXEEXT)'; \
	b='timer_past'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timer_zero.log: timer_zero$(EXEEXT)
	@p='timer_zero$(EXEEXT)'; \
	b='timer_zero'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
iv_signal_test.log: iv_signal_test$(EXEEXT)
	@p='iv_signal_test$(EXEEXT)'; \
	b='iv_signal_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/avl.Po
	-rm -f ./$(DEPDIR)/client.Po
	-rm -f ./$(DEPDIR)/connectfail.Po
	-rm -f ./$(DEPDIR)/connectreset.Po
	-rm -f ./$(DEPDIR)/event_unregister_bug.Po
	-rm -f ./$(DEPDIR)/iv_event_raw_bench.Po
	-rm -f ./$(DEPDIR)/iv_event_raw_bench_signal-iv_event_raw_bench.Po
	-rm -f ./$(DEPDIR)/iv_event_raw_test.Po
	-rm -f ./$(DEPDIR)/iv_fd_pump_discard.Po
	-rm -f ./$(DEPDIR)/iv_fd_pump_echo.Po
	-rm -f ./$(DEPDIR)/iv_inotify_test.Po
	-rm -f ./$(DEPDIR)/iv_popen_test.Po
	-rm -f ./$(DEPDIR)/iv_signal_bench.Po
	-rm -f ./$(DEPDIR)/iv_signal_bench_signal-iv_signal_bench.Po
	-rm -f ./$(DEPDIR)/iv_signal_child_test.Po
	-rm -f ./$(DEPDIR)/iv_signal_test.Po
	-rm -f ./$(DEPDIR)/null.Po
	-rm -f ./$(DEPDIR)/struct_sizes.Po
	-rm -f ./$(DEPDIR)/timer.Po
	-rm -f ./$(DEPDIR)/timer_fairness.Po
	-rm -f ./$(DEPDIR)/timer_fairness_bug.Po
	-rm -f ./$(DEPDIR)/timer_order.Po
	-rm -f ./$(DEPDIR)/timer_past.Po
	-rm -f ./$(DEPDIR)/timer_zero.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/avl.Po
	-rm -f ./$(DEPDIR)/client.Po
	-rm -f ./$(DEPDIR)/connectfail.Po
	-rm -f ./$(DEPDIR)/connectreset.Po
	-rm -f ./$(DEPDIR)/event_unregister_bug.Po
	-rm -f ./$(DEPDIR)/iv_event_raw_bench.Po
	-rm -f ./$(DEPDIR)/iv_event_raw_bench_signal-iv_event_raw_bench.Po
	-rm -f ./$(DEPDIR)/iv_event_raw_test.Po
	-rm -f ./$(DEPDIR)/iv_fd_pump_discard.Po
	-rm -f ./$(DEPDIR)/iv_fd_pump_echo.Po
	-rm -f ./$(DEPDIR)/iv_inotify_test.Po
	-rm -f ./$(DEPDIR)/iv_popen_test.Po
	-rm -f ./$(DEPDIR)/iv_signal_bench.Po
	-rm -f ./$(DEPDIR)/iv_signal_bench_signal-iv_signal_bench.Po
	-rm -f ./$(DEPDIR)/iv_signal_child_test.Po
	-rm -f ./$(DEPDIR)/iv_signal_test.Po
	-rm -f ./$(DEPDIR)/null.Po
	-rm -f ./$(DEPDIR)/struct_sizes.Po
	-rm -f ./$(DEPDIR)/timer.Po
	-rm -f ./$(DEPDIR)/timer_fairness.Po
	-rm -f ./$(DEPDIR)/timer_fairness_bug.Po
	-rm -f ./$(DEPDIR)/timer_order.Po
	-rm -f ./$(DEPDIR)/timer_past.Po
	-rm -f ./$(DEPDIR)/timer_zero.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles buildtest-TESTS check \
	check-TESTS check-am clean clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck runtest-TESTS tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
